#!/bin/sh

source /usr/lib/slitaz/libtaz
source_lib commons
check_root

. /etc/local-mirror.conf

VERSION="0.1"
COMMAND="$1"

usage() {
	echo "$0 $VERSION"
	echo "$0 [on|off|tank-only|mirror-only]"
	exit 1 
}

if [ "$COMMAND" = "tank-only" ]; then
	WWW="${WWW/mirror/}"
	ADDRESS="${ADDRESS/mirror.slitaz.org/}"
	VHOST_FILE="$VHOST_TANK_FILE"
fi

if [ "$COMMAND" = "mirror-only" ]; then
	WWW="${WWW/tank/}"
	ADDRESS="mirror.slitaz.org"
	VHOST_FILE="$VHOST_MIRROR_FILE"
fi

[ -d $REPOS_DIR ] || continue
[ -d $WWW_DIR ] || mkdir -p $WWW_DIR
[ -L /var/www/vhosts ] || ln -sf $WWW_DIR /var/www/vhosts

www() {
	b=$1
	case "$b" in
		website)
			[ -d $REPOS_DIR/$b ] && ln -s $REPOS_DIR/$b $WWW_DIR
		;;
		people)
			[ -d $REPOS_DIR/slitaz-forge/people ] && ln -s $REPOS_DIR/slitaz-forge/people $WWW_DIR/people
		;;
		doc)
			[ -d $REPOS_DIR/slitaz-forge/doc ] && cp -a $REPOS_DIR/slitaz-forge/doc $WWW_DIR/doc
			[ -d /var/www/dokuwiki ] && cp -a /var/www/dokuwiki/* $WWW_DIR/doc
			VAR="index media pages"
			for i in $VAR; do
				[ -d $REPOS_DIR/slitaz-doc-wiki-data ] && cp -a $REPOS_DIR/slitaz-doc-wiki-data/$i $WWW_DIR/doc/data
			done
			[ -d $REPOS_DIR/slitaz-doc-wiki-data/plugins ] && cp -a $REPOS_DIR/slitaz-doc-wiki-data/plugins  $WWW_DIR/doc/lib
			chown root.root -R $WWW_DIR/doc
			chmod 777 -R $WWW_DIR/doc
		;;
		pizza)
			[ -d $REPOS_DIR/slitaz-pizza/php ] && ln -sf $REPOS_DIR/slitaz-pizza/php $WWW_DIR/pizza
		;;
		bb)
			[ -d /usr/share/slitaz/web-bb ] && cp -a /usr/share/slitaz/web-bb $WWW_DIR/bb
			#[ -d /usr/share/slitaz/web ] && cp -a /usr/share/slitaz/web $WWW_DIR/bb/web
			[ -d $REPOS_DIR/website/pics ] && ln -sf $REPOS_DIR/website/pics $WWW_DIR/bb/pics
			[ -d $COOKING/wok ] || ln -sf $REPOS_DIR/wok $COOKING/clean-wok
			[ -d $STABLE/wok ] || ln -sf $REPOS_DIR/wok-stable $STABLE/clean-wok
			echo -e "$WWW_DIR/bb" | tazwok webserver on
		;;
		pkgs)
			[ -d $wWW_DIR/pkgs ] || mkdir -p $WWW_DIR/pkgs
		
			#[ -d /var/lib/tazpkg-web/style ] && cp -a /var/lib/tazpkg-web/style/* $WWW_DIR/pkgs
			#[ -f /var/lib/tazpkg-web/search.cgi ] && cp -a /var/lib/tazpkg-web/search.cgi $WWW_DIR/pkgs
			[ -d $REPOS_DIR/slitaz-dev-tools/tazpkg-web/style ] && cp -a $REPOS_DIR/slitaz-dev-tools/tazpkg-web/style/* $WWW_DIR/pkgs
			[ -d $REPOS_DIR/slitaz-dev-tools/tazpkg-web/search.cgi ] && cp -a $REPOS_DIR/slitaz-dev-tools/tazpkg-web/search.cgi $WWW_DIR/pkgs
			[ -d $COOKING ] || mkdir -p $COOKING
			[ -d $STABLE ] || mkdir -p $STABLE
			[ -d $REPOS_DIR/flavors ] && ln -sf $REPOS_DIR/flavors $COOKING/flavors
			[ -d $REPOS_DIR/flavors-stable ] && ln -sf $REPOS_DIR/flavors-stable $STABLE/flavors
			[ -d $COOKING/wok ] || ln -sf $REPOS_DIR/wok $COOKING/clean-wok
			[ -d $STABLE/wok ] || ln -sf $REPOS_DIR/wok-stable $STABLE/clean-wok
			[ -d $PKGDIR ] && ln -sf $PKGDIR /home/slitaz/$(cat /etc/slitaz-release)/packages
			[ -d $SRCDIR ] && ln -sf $SRCDIR /home/slitaz/$(cat /etc/slitaz-release)/src
		;;
		mirror)
			[ -d $REPOS_DIR/slitaz-dev-tools/mirror-tools/mirror-info ] && cp -a $REPOS_DIR/slitaz-dev-tools/mirror-tools/mirror-info $WWW_DIR
			[ -d $REPOS_DIR/slitaz-dev-tools/mirror-tools/slitaz ] && cp -a $REPOS_DIR/slitaz-dev-tools/mirror-tools/slitaz $WWW_DIR
			[ -d $WWW_DIR/slitaz/mirror/packages ] || mkdir -p $WWW_DIR/slitaz/mirror/packages
			[ -d $PKGDIR ] && ln -sf $PKGDIR $WWW_DIR/slitaz/mirror/packages/$(cat /etc/slitaz-release)
			if [ -d $SRCDIR ]; then
				for i in $(ls $SRCDIR); do
					[ -d $WWW_DIR/slitaz/mirror/sources/packages/${i:0:1} ] || mkdir -p $WWW_DIR/slitaz/mirror/sources/packages/${i:0:1}
					[ -f $WWW_DIR/slitaz/mirror/sources/packages/${i:0:1}/$i ] || ln -s $SRCDIR/$i $WWW_DIR/slitaz/mirror/sources/packages/${i:0:1}/$i
				done
			fi
		;;
		boot)
			[ -d $REPOS_DIR/slitaz-forge/$b/web ] && cp -a $REPOS_DIR/slitaz-forge/$b/web $WWW_DIR/$b
			[ -d $REPOS_DIR/website/pics ] && ln -sf $REPOS_DIR/website/pics $WWW_DIR/$b/pics
		;;
		tank)
			[ -d $REPOS_DIR/slitaz-forge/$b/web ] && ln -sf $REPOS_DIR/slitaz-forge/$b/web $WWW_DIR/$b
			[ -f /usr/share/awstats/extras/update ] && ln -sf /usr/share/awstats/extras/update /usr/sbin/awsupdate_all
			[ -d $REPOS_DIR/slitaz-forge/$b/files/etc/awstats ] && cp -a $REPOS_DIR/slitaz-forge/$b/files/etc/awstats/* /etc/awstats
			for i in $ADDRESS; do
				if [ -f /etc/awstats/awstats.$i.conf ]; then
					dirlog=$(grep ^DirData= /etc/awstats/awstats.$i.conf | cut -d "=" -f2 | sed -e 's/"//g')
					mkdir -p $dirlog
				fi
			done
		;;
		hg)
			[ -d $WWW_DIR/hg ] || mkdir -p $WWW_DIR/hg
			[ -f /usr/share/examples/mercurial/hgwebdir.cgi ] && cp -a /usr/share/examples/mercurial/hgwebdir.cgi $WWW_DIR/hg
			[ -f $REPOS_DIR/slitaz-forge/tank/files/etc/mercurial/hgweb.config ] && cp -a $REPOS_DIR/slitaz-forge/tank/files/etc/mercurial/hgweb.config /etc/mercurial/hgweb.config
			#[ -f /etc/mercurial/hgweb.conf ] && sed -i 's|style = slitaz|style = gitweb|g' /etc/mercurial/hgweb.config
		;;
		lfs)
			[ -d $WWW_DIR/lfs ] || ln -sf /usr/share/doc/lfs-book $WWW_DIR/lfs
		;;
	esac
}

repos() {
	for repo in $REPOS; do
		[ -d $REPOS_DIR/$repo ] || continue
		if [ -d $REPOS_DIR/$repo/.hg ]; then
			mkdir -p $REPOS_WEB_DIR/$repo
			[ -d $REPOS_WEB_DIR/$repo/.hg ] || ln -s $REPOS_DIR/$repo/.hg $REPOS_WEB_DIR/$repo/.hg
			if [ ! $(grep -l "$REPOS_WEB_DIR" /etc/mercurial/hgweb.config) ]; then
				[ -f /etc/mercurial/hgweb.config ] && sed -i "s|$REPOS_DIR|$REPOS_WEB_DIR|g" /etc/mercurial/hgweb.config
			fi
		fi
		if [ ! -f $REPOS_DIR/$repo/.hg/hgrc-web ]; then
			touch $REPOS_DIR/$repo/.hg/hgrc-web
			echo "[paths]" >> $REPOS_DIR/$repo/.hg/hgrc-web
			echo "default = http://hg.slitaz.org/$repo/" >> $REPOS_DIR/$repo/.hg/hgrc-web
			echo "[web]" >> $REPOS_DIR/$repo/.hg/hgrc-web
			#[ -d $REPOS_DIR/$repo/.hg ] && echo "style = slitaz" >> $REPOS_DIR/$repo/.hg/hgrc-web
			echo "staticurl = http://hg.slitaz.org/static/" >> $REPOS_DIR/$repo/.hg/hgrc-web
			echo "push_ssl = false" >> $REPOS_DIR/$repo/.hg/hgrc-web
			echo "allow_push = *" >> $REPOS_DIR/$repo/.hg/hgrc-web
			#[ ! -f $REPOS_DIR/$repo/.hg/hgrc-pull ] && mv $REPOS_DIR/$repo/.hg/hgrc $REPOS_DIR/$repo/.hg/hgrc-pull
			cp -a $REPOS_DIR/$repo/.hg/hgrc-web $REPOS_DIR/$repo/.hg/hgrc
		fi
	
		if [ ! $(grep -l 'name = ' $REPOS_DIR/$repo/.hg/hgrc ) ]; then
			echo "name = $repo" >> $REPOS_DIR/$repo/.hg/hgrc
		fi
	
		if [ ! $(grep -l 'contact = ' $REPOS_DIR/$repo/.hg/hgrc ) ]; then
			[ "$repo" = "flavors" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "flavors-stable" ] && echo "contact = Pascal Bellard" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-base-files" ] && echo "contact = Pascal Bellard" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-boot-scripts" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-configs" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-dev-tools" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-doc" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-doc-wiki-data" ] && echo "contact = Christopher Rogers" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-forge" ] && echo "contact = Eric Joseph-Alexandre" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-modular" ] && echo "contact = Christopher Rogers" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-pizza" ] && echo "contact = Pascal Bellard" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-tools" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "tazlito" ] && echo "contact = Pascal Bellard" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "tazpkg" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "tazusb" ] && echo "contact = Eric Joseph-Alexandre" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "tazwok" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "website" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "wok" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "wok-stable" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "wok-tiny" ] && echo "contact = Pascal Bellard" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "wok-undigest" ] && echo "contact = Christophe Lincoln" >> $REPOS_DIR/$repo/.hg/hgrc
		fi
	
		if [ ! $(grep -l 'description = ' $REPOS_DIR/$repo/.hg/hgrc) ]; then
			[ "$repo" = "flavors" ] && echo "description = SliTaz Cooking flavors" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "flavors-stable" ] && echo "description = SliTaz Stable flavors" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-base-files" ] && echo "description = SliTaz base files" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-boot-scripts" ] && echo "description = SliTaz boot scripts" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-configs" ] && echo "description = SliTaz configuration files" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-dev-tools" ] && echo "description = SliTaz Developers Tools" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-doc" ] && echo "description = SliTaz system doc" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-doc-wiki-data" ] && echo "description = SliTaz documentation wiki content" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-forge" ] && echo "description = SliTaz Forge Config" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-modular" ] && echo "description = Scripts to make SliTaz Modular" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-pizza" ] && echo "description = SliTaz Online flavor builder" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "slitaz-tools" ] && echo "description = SliTaz Tools and Tinyutils" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "tazlito" ] && echo "description = SliTaz Live Tool" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "tazpkg" ] && echo "description = SliTaz Packages manager" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "tazusb" ] && echo "description = SliTaz LiveUSB utility" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "tazwok" ] && echo "description = Slitaz Packages builder" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "website" ] && echo "description = SliTaz Website" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "wok" ] && echo "description = SliTaz Cooking wok" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "wok-stable" ] && echo "description = SliTaz Stable wok" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "wok-tiny" ] && echo "description = Tiny SliTaz wok" >> $REPOS_DIR/$repo/.hg/hgrc
			[ "$repo" = "wok-undigest" ] && echo "description = SliTaz Undigest wok" >> $REPOS_DIR/$repo/.hg/hgrc
		fi
	done
}

case "$COMMAND" in 
	on|tank-only|mirror-only)
		[ -d $WWW_DIR/mirror-info ] && WWW="${WWW/mirror /}"
		for c in $WWW; do
			if [ ! -d $WWW_DIR/$c ]; then
				www $c
				[ "$c" = "hg" ] && repos
			fi
		done
		echo "127.0.0.1 localhost $(cat /etc/hostname)" > /etc/hosts
		for hostname in $ADDRESS; do 
				#if [ ! $(grep -l "${BASE_IP}.$i $hostname" /etc/hosts) ]; then
					echo "$IP_ADDR $hostname" >> /etc/hosts
				#fi
		done
		if [ "$IP_ADDR" != "127.0.0.1" ]; then
			if [ ! $(grep -l 'dhcp-option=option:router' /etc/dnsmasq.conf) ]; then
				echo "dhcp-option=option:router,$ROUTER_IP" >> /etc/dnsmasq.conf
			fi
		fi
		echo "$PKGDIR" > $LOCALSTATE/mirror
		if [ "$COMMAND" = "tank-only" ]; then
			[ -f $VHOST_TANK_FILE ] && ln -sf $VHOST_TANK_FILE /etc/lighttpd/vhosts.conf
		elif [ "$COMMAND" = "mirror-only" ]; then
			[ -f $VHOST_MIRROR_FILE ] && ln -sf $VHOST_MIRROR_FILE /etc/lighttpd/vhosts.conf
		else
			[ -f $VHOST_FILE ] && ln -sf $VHOST_FILE /etc/lighttpd/vhosts.conf
		fi
		chown -R www.www /home/slitaz/www
		[ -f /etc/init.d/lighttpd ] && /etc/init.d/lighttpd start
		;;
	off)
		[ -f /etc/init.d/lighttpd ] && /etc/init.d/lighttpd stop
		echo "127.0.0.1 localhost $(cat /etc/hostname)" > /etc/hosts
		exit 1
		;;
	*)
		usage
		;;
esac
